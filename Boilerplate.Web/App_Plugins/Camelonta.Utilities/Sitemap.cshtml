@inherits System.Web.Mvc.WebViewPage<Stbd.Core.ViewModels.Sitemap>
@using System.Linq;
@using Stbd.Core.Classes.CamelontaUI
@using Umbraco.Core.Models
@using Umbraco.Web
@{
    Layout = null;
    Response.ContentType = "text/xml";
}

<?xml version='1.0' encoding='UTF-8' ?>

<urlset xmlns="http://www.sitemaps.org/schemas/sitemap/0.9">
    @foreach (var rootNode in Model.RootNodes)
    {
        @ListChildNodes(rootNode);
    }
</urlset>

@helper ListChildNodes(IPublishedContent startNode)
{
    if (startNode == null)
    {
        return;
    }
    
    foreach (var node in startNode.Children)
    {
        if (node.AllowRobotsIndex() && node.TemplateId > 0)
        {
            <url>
                <loc>@GetUrlWithDomainPrefix(node)</loc>
                <lastmod>@(string.Format("{0:s}+00:00", node.UpdateDate))</lastmod>
            </url>
        }
        if (node.Level <= 100 && node.Children.Any())
        {
            @ListChildNodes(node)
        }
    }
}

@functions {
    private static string GetUrlWithDomainPrefix(IPublishedContent rootNode)
    {
        var urlAbsolute = rootNode.UrlAbsolute();

        // If url is startpage/firstpage we should just return absolute-url without a path-value
        if (rootNode.UrlName == "hem" || rootNode.UrlName == "home" || rootNode.UrlName == "start")
        {
            return urlAbsolute.Replace(rootNode.UrlName, "");
        }

        return urlAbsolute;
    }
}