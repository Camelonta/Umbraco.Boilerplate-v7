@using Newtonsoft.Json
@inherits CamelontaUmbracoTemplatePage
@{
    var topLinks = CurrentSite.GetPropertyValue<IEnumerable<IPublishedContent>>("topLinks");
}

@if (topLinks != null && topLinks.Any())
{
    <div class="top-links">
        <ul class="top-links__list">
            @foreach (var topLink in topLinks)
            {
                var jsonLink = topLink.GetPropertyValue<string>("link");
                if (!string.IsNullOrEmpty(jsonLink))
                {
                    var url = "";
                    var linkText = topLink.GetPropertyValue<string>("linkText");
                    var link = JsonConvert.DeserializeObject<LinkPickerModel>(jsonLink);

                    // no page is selected
                    if (link.Id == 0)
                    {
                        url = link.Url;
                    }

                    else
                    {
                        var page = Umbraco.Content(link.Id);
                        url = page.Url;

                        if (page.DocumentTypeAlias == "externalLink")
                        {
                            link.Target = "_blank";
                            link = page.GetPropertyValue("externalLink");
                            linkText = !string.IsNullOrEmpty(linkText) ? linkText : page.NavName();
                        }
                    }

                    <li>
                        <a href="@url" class="top-links__link" target="@link.Target">
                            
                            <span>@linkText</span>

                            @if (topLink.HasValue("icon"))
                            {
                                var iconId = topLink.GetPropertyValue("icon");
                                <img src="@Umbraco.TypedMedia(iconId).Url?width=30&mode=min" alt="@linkText">
                            }
                        </a>
                    </li>
                }
            }
        </ul>
    </div>
}
